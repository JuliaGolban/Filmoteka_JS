{"mappings":"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","sources":["src/js/libraryButtonSwitch.js","src/js/sortLibrary.js"],"sourcesContent":["import { renderMarkupMovieCard, removeMarkupMovieCard } from './movie-card';\nimport { clearData, getFromStorage, saveToStorage } from './localeCommon';\nimport { getCurrentStorage } from './localeStorage';\nimport getRefs from './getRefs';\nconst refs = getRefs();\n\nrefs.btnWatched.addEventListener('click', clickOnWatched);\nrefs.btnQueue.addEventListener('click', clickOnQueue);\n\nclickOnWatched();\n\nfunction clickOnWatched() {\n  refs.btnWatched.classList.add('--active-btn');\n  refs.btnQueue.classList.remove('--active-btn');\n  let stack = getFromStorage('watched');\n  if (!stack) {\n    return refs.title.classList.remove('is-hidden');\n  }\n  removeMarkupMovieCard();\n  let results = getFromStorage('watched');\n  renderMarkupMovieCard({ results });\n}\n\nfunction clickOnQueue() {\n  refs.btnQueue.classList.add('--active-btn');\n  refs.btnWatched.classList.remove('--active-btn');\n  let stack = getFromStorage('queue');\n  if (!stack) {\n    return refs.title.classList.remove('is-hidden');\n  }\n  removeMarkupMovieCard();\n  let results = getFromStorage('queue');\n  renderMarkupMovieCard({ results });\n}\n","import getRefs from './getRefs';\nimport {removeMarkupMovieCard} from './movie-card';\nimport { getGenresLocalStorege } from './api-genres';\n\nconst refs = getRefs();\n\nrefs.btn.addEventListener('click', onClickMenu)\nfunction onClickMenu() {\n  refs.firstLine.classList.toggle('genres-nav-button__line--1');\n  refs.secondLine.classList.toggle('genres-nav-button__line--2');\n  refs.thirdLine.classList.toggle('genres-nav-button__line--3');\n  refs.menu.classList.toggle('mobile-menu--open');\n  renderGenres(getFromStorageGenre())\n}\nwindow.onscroll = function () {\n  scrollFunction();\n};\nfunction scrollFunction() {\n  if (document.body.scrollTop > 200 || document.documentElement.scrollTop > 200) {\n        refs.menu.classList.remove('mobile-menu--open');\n        refs.firstLine.classList.remove('genres-nav-button__line--1');\n        refs.secondLine.classList.remove('genres-nav-button__line--2');\n        refs.thirdLine.classList.remove('genres-nav-button__line--3');\n    }\n}\n\nfunction renderGenres(results) {\n  refs.menuList.innerHTML = '';\n  const markup = results.map(({name,id}) =>{\n      return `<li class=\"mobile-menu-item\"><a class='mobile-menu-link' data-action=\"${id}\">${name}</a></li>`\n  }).join('');\n  refs.menuList.insertAdjacentHTML('beforeend', markup)\n}\n\nlet storageKey = 'genres';\nfunction getFromStorageGenre() {\n  try {\n    const data = JSON.parse(localStorage.getItem(storageKey));\n    return data;\n} catch (err) {\n    console.warn('Cannot parse JSON from localStorage');\n    return null;\n}\n}\n\n//sort\nrefs.menuList.addEventListener('click', sortByGenre)\n\nfunction sortByGenre(event) {\n    if (event.target.nodeName !== \"A\") {\n      return;\n    }\n\n    let storageKey = 'watched';\n      function getFromStorageMovies() {\n    try {\n      const data = JSON.parse(localStorage.getItem(storageKey));\n      return data;\n    } catch (err) {\n      console.warn('Cannot parse JSON from localStorage');\n      return null;\n    }\n  }\n  const result = getFromStorageMovies();\n\n  const value = event.target.dataset.action;\n  const link = document.querySelectorAll('.mobile-menu-link');\n  console.log('sortByGenre ~ value', value);\n  for (let i = 0; i < link.length; i += 1) {\n    if (value === link[i].dataset.action) {\n      link[i].classList.add('active');\n    } else {\n      link[i].classList.remove('active');\n    }\n  }\n\n  let arr =[];\n  \n  result.forEach((elem)=>{\n    if(elem.genre_ids.includes(Number(value))) {\n         removeMarkupMovieCard()\n         refs.title.classList.add('is-hidden')\n         arr.push(elem);\n    }\n    else {\n      removeMarkupMovieCard();\n    }\n  })\n  renderMarkupCardLibrary(arr);\n  if(arr.length===0) {\n    refs.title.classList.remove('is-hidden')\n  }\n\n\n  function renderMarkupCardLibrary(results) {\n    const markup = results\n      .map(({ id, poster_path, genre_ids, title, release_date }) => {\n        let name = getGenresLocalStorege(genre_ids);\n        return `\n                  <li class=\"gallery__item\" data-id=\"${id}\">\n                          ${\n                            poster_path\n                              ? `<img src=\"https://image.tmdb.org/t/p/w500${poster_path}\"`\n                              : `<img src=\"https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj\"`\n                          }\n                          class=\"gallery__item-image\" \n                          alt=\"${title}\" width=\"250\"\n                          loading=\"lazy\"\n                          />\n                          <div class=\"gallery__item-description\">\n                          <p class=\"gallery__item-description-title\"> ${title}</p>\n                          <p class=\"gallery__item-description-genres\"> ${name} | ${release_date?.slice(\n          0,\n          4\n        )}</p>\n                      </div>\n                  </li> `;\n      })\n      .join('');\n    refs.galleryList.insertAdjacentHTML('beforeend', markup);\n  }\n}"],"names":["$03v4M","parcelRequire","$4d1f8c8f51c0cf7d$var$refs","default","$4d1f8c8f51c0cf7d$var$clickOnWatched","btnWatched","classList","add","btnQueue","remove","$cChFX","getFromStorage","title","removeMarkupMovieCard","results","renderMarkupMovieCard","addEventListener","$1DTXP","$7732a27247c10647$var$refs","btn","firstLine","toggle","secondLine","thirdLine","menu","menuList","innerHTML","markup","map","name","id","join","insertAdjacentHTML","$7732a27247c10647$var$renderGenres","JSON","parse","localStorage","getItem","err","console","warn","$7732a27247c10647$var$getFromStorageGenre","window","onscroll","document","body","scrollTop","documentElement","event","target","nodeName","result","getFromStorageMovies","value","dataset","action","link","querySelectorAll","log","i","length","arr","forEach","elem","genre_ids","includes","Number","push","poster_path","release_date","$btlO4","getGenresLocalStorege","slice","galleryList","renderMarkupCardLibrary"],"version":3,"file":"library.281222b7.js.map"}