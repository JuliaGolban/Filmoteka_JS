{"mappings":"oeAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,S,6BCAAA,EAAA,S,4BCAAC,EAAAD,EAAA,S,YAEA,MAAME,GAAO,EAAAD,EAAAE,WAEE,SAAAC,EAAiCC,GAC9C,MAAMC,EAASD,EACZE,KAAI,EAACC,GAAEA,EAAEC,YAAEA,EAAWC,UAAEA,EAASC,MAAEA,EAAKC,aAAEA,KAElC,0DAC0CJ,kCAE3BC,EACI,4CAA4CA,KAC5C,kOAGCE,oOAIuCA,kFAbvD,EAAAE,EAAAC,uBAAsBJ,QAc4CE,aAAA,EAAAA,EAAcG,MACzF,EACA,mEAKHC,KAAK,IACRd,EAAKe,YAAYC,mBAAmB,YAAaZ,E,CDzBnD,MAAMa,GAAO,EAAAlB,EAAAE,WDGb,MAAMiB,GAAO,EAAAnB,EAAAE,WAEbiB,EAAKC,IAAIC,iBAAiB,QAASC,EAAAC,aAEnCC,OAAOC,SAAW,YAChB,EAAAC,EAAAxB,U,EAIFiB,EAAKQ,SAASN,iBAAiB,SCVhB,SAAqBO,GAClC,GAA8B,MAA1BA,EAAMC,OAAOC,SACf,OAGF,IAAIC,EAAa,CAAC,UAAW,SAO7B,MAAMC,EAJAd,EAAKe,SAASC,UAAUC,SAAS,gBAC5BJ,EAAW,GACNA,EAAW,GAIrBK,GAAS,EAAAC,EAAAC,gBAAeN,GAExBO,EAAQX,EAAMC,OAAOW,QAAQC,OAC7BC,EAAOC,SAASC,iBAAiB,qBACvCC,QAAQC,IAAI,sBAAuBP,GACnC,IAAK,IAAIQ,EAAI,EAAGA,EAAIL,EAAKM,OAAQD,GAAK,EAChCR,IAAUG,EAAKK,GAAGP,QAAQC,OAC5BC,EAAKK,GAAGb,UAAUe,IAAI,UAEtBP,EAAKK,GAAGb,UAAUgB,OAAO,UAI7B,IAAIC,EAAM,GACVf,EAAOgB,SAAQC,IACTA,EAAK5C,UAAU6C,SAASC,OAAOhB,MACjC,EAAAiB,EAAAC,yBACAvC,EAAKR,MAAMwB,UAAUe,IAAI,aACzBE,EAAIO,KAAKL,KAET,EAAAG,EAAAC,wBAAuB,IAI3BtD,EAAwBgD,GACnBA,EAAIH,QACP9B,EAAKR,MAAMwB,UAAUgB,OAAO,Y","sources":["src/library.js","src/js/genres/sortLibrary.js","src/js/genres/sort-library-local.js","src/js/genres/render-from-storage.js"],"sourcesContent":["import './js/layouts/libraryButtonSwitch';\nimport './js/genres/sortLibrary';\nimport './js/layouts/movieCardModal';\nimport './js/layouts/userAuthModal';\nimport './js/layouts/teamModal';\nimport './js/firebase/firebase';\nimport './js/components/scrollTo';\nimport './js/components/colorTheme';\n","import getRefs from '../getRefs';\nimport { onClickMenu } from './onClickMenu';\nimport scrollFunction from './auto-close-menu';\nimport sortByGenre from './sort-library-local';\n\nimport renderMarkupCardLibrary from './render-from-storage';\n\nconst refs = getRefs();\n//open menu genres\nrefs.btn.addEventListener('click', onClickMenu);\n//autoclose menu onscroll\nwindow.onscroll = function () {\n  scrollFunction();\n};\n\n//sort\nrefs.menuList.addEventListener('click', sortByGenre);\n","import getRefs from '../getRefs';\nimport { getFromStorage } from '../localStorage/lsService';\nimport { removeMarkupMovieCard } from '../layouts/renderMovieCard';\nimport renderMarkupCardLibrary from './render-from-storage';\nconst refs = getRefs();\n\nexport default function sortByGenre(event) {\n  if (event.target.nodeName !== 'A') {\n    return;\n  }\n  //get card from localeStorage with storageKey\n  let storageKey = ['watched', 'queue'];\n\n  function getStorageKey() {\n    if (refs.btnQueue.classList.contains('--active-btn')) {\n      return storageKey[1];\n    } else return storageKey[0];\n  }\n  const key = getStorageKey();\n\n  const result = getFromStorage(key);\n  //add and remove class active to link with genre\n  const value = event.target.dataset.action;\n  const link = document.querySelectorAll('.mobile-menu-link');\n  console.log('sortByGenre ~ value', value);\n  for (let i = 0; i < link.length; i += 1) {\n    if (value === link[i].dataset.action) {\n      link[i].classList.add('active');\n    } else {\n      link[i].classList.remove('active');\n    }\n  }\n  // sort card to active genre\n  let arr = [];\n  result.forEach(elem => {\n    if (elem.genre_ids.includes(Number(value))) {\n      removeMarkupMovieCard();\n      refs.title.classList.add('is-hidden');\n      arr.push(elem);\n    } else {\n      removeMarkupMovieCard();\n    }\n  });\n\n  renderMarkupCardLibrary(arr);\n  if (!arr.length) {\n    refs.title.classList.remove('is-hidden');\n  }\n}\n","import getRefs from '../getRefs';\nimport { getGenresLocalStorege } from '../APIservise/APIgenres';\nconst refs = getRefs();\n\nexport default function renderMarkupCardLibrary(results) {\n  const markup = results\n    .map(({ id, poster_path, genre_ids, title, release_date }) => {\n      let name = getGenresLocalStorege(genre_ids);\n      return `\n                  <li class=\"gallery__item\" data-id=\"${id}\">\n                          ${\n                            poster_path\n                              ? `<img src=\"https://image.tmdb.org/t/p/w500${poster_path}\"`\n                              : `<img src=\"https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj\"`\n                          }\n                          class=\"gallery__item-image\" \n                          alt=\"${title}\" width=\"250\"\n                          loading=\"lazy\"\n                          />\n                          <div class=\"gallery__item-description\">\n                          <p class=\"gallery__item-description-title\"> ${title}</p>\n                          <p class=\"gallery__item-description-genres\"> ${name} | ${release_date?.slice(\n        0,\n        4\n      )}</p>\n                      </div>\n                  </li> `;\n    })\n    .join('');\n  refs.galleryList.insertAdjacentHTML('beforeend', markup);\n}\n"],"names":["parcelRequire","$1DTXP","$c2665d3012887a14$var$refs","default","$c2665d3012887a14$export$2e2bcd8739ae039","results","markup","map","id","poster_path","genre_ids","title","release_date","$dChj0","getGenresLocalStorege","slice","join","galleryList","insertAdjacentHTML","$e318d42106899bb4$var$refs","$be34bc56793f7341$var$refs","btn","addEventListener","$fYi57","onClickMenu","window","onscroll","$1TnVj","menuList","event","target","nodeName","storageKey","key","btnQueue","classList","contains","result","$jo4yn","getFromStorage","value","dataset","action","link","document","querySelectorAll","console","log","i","length","add","remove","arr","forEach","elem","includes","Number","$dDxon","removeMarkupMovieCard","push"],"version":3,"file":"library.4565df80.js.map"}