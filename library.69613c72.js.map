{"mappings":"gfAAAA,EAAA,S,iCCAA,IAAAC,EAAAD,EAAA,S,0BAIME,GAAO,EAAAD,EAAAE,WAEbD,EAAKE,IAAIC,iBAAiB,SAC1B,WACEH,EAAKI,UAAUC,UAAUC,OAAO,8BAChCN,EAAKO,WAAWF,UAAUC,OAAO,8BACjCN,EAAKQ,UAAUH,UAAUC,OAAO,8BAChCN,EAAKS,KAAKJ,UAAUC,OAAO,qBAe7B,SAAsBI,GACpBV,EAAKW,SAASC,UAAY,GAC1B,IAAMC,EAASH,EAAQI,KAAI,SAAAC,G,IAAEC,EAAID,EAAJC,KAAKC,EAAEF,EAAFE,GAC9B,MAAO,2EAAgFC,OAAPD,EAAG,MAASC,OAALF,EAAK,Y,IAC7FG,KAAK,IACRnB,EAAKW,SAASS,mBAAmB,YAAaP,E,CAnB9CQ,CAuBF,WACE,IAEE,OADaC,KAAKC,MAAMC,aAAaC,QAAQC,G,CAE/C,MAAOC,GAEL,OADAC,QAAQC,KAAK,uCACN,I,EA7BIC,G,IAEfC,OAAOC,SAAW,YAIZC,SAASC,KAAKC,UAAY,KAAOF,SAASG,gBAAgBD,UAAY,OACpEnC,EAAKS,KAAKJ,UAAUgC,OAAO,qBAC3BrC,EAAKI,UAAUC,UAAUgC,OAAO,8BAChCrC,EAAKO,WAAWF,UAAUgC,OAAO,8BACjCrC,EAAKQ,UAAUH,UAAUgC,OAAO,8B,EAYxC,IAAIX,EAAa,SAYjB1B,EAAKW,SAASR,iBAAiB,SAE/B,SAAqBmC,GACjB,GAA8B,MAA1BA,EAAMC,OAAOC,SACf,OAaJ,IAAMC,EATF,WACF,IAEE,OADanB,KAAKC,MAAMC,aAAaC,QAHtB,W,CAKf,MAAOE,GAEP,OADAC,QAAQC,KAAK,uCACN,I,EAGIa,GAETC,EAAQL,EAAMC,OAAOK,QAAQC,OAC7BC,EAAOb,SAASc,iBAAiB,qBACvCnB,QAAQoB,IAAI,sBAAuBL,GACnC,IAAK,IAAIM,EAAI,EAAGA,EAAIH,EAAKI,OAAQD,GAAK,EAChCN,IAAUG,EAAKG,GAAGL,QAAQC,OAC5BC,EAAKG,GAAG5C,UAAU8C,IAAI,UAEtBL,EAAKG,GAAG5C,UAAUgC,OAAO,UAI7B,IAAIe,EAAK,GAETX,EAAOY,SAAQ,SAACC,GACXA,EAAKC,UAAUC,SAASC,OAAOd,MAC7B,EAAAe,EAAAC,yBACA3D,EAAK4D,MAAMvD,UAAU8C,IAAI,aACzBC,EAAIS,KAAKP,KAGZ,EAAAI,EAAAC,wB,IAS6BjD,EANT0C,EAOhBvC,EAASH,EACZI,KAAI,SAAAC,G,IAAGE,EAAEF,EAAFE,GAAI6C,EAAW/C,EAAX+C,YAAaP,EAASxC,EAATwC,UAAWK,EAAK7C,EAAL6C,MAAOG,EAAYhD,EAAZgD,aACrC/C,GAAO,EAAAgD,EAAAC,uBAAsBV,GACjC,MAAO,0DAGarC,OAF2BD,EAAG,kCAOzBC,OALL4C,EACI,4CAAwD5C,OAAZ4C,EAAY,KACvD,uIACN,6FAM6C5C,OAJvC0C,EAAM,oOAKkC1C,OADD0C,EAAM,iFACA1C,OAALF,EAAK,OAGpEE,OAHyE6C,aAAA,EAAAA,EAAcG,MACvF,EACA,GACA,+D,IAIH/C,KAAK,SACRnB,EAAKmE,YAAY/C,mBAAmB,YAAaP,GA9BnC,IAAbuC,EAAIF,QACLlD,EAAK4D,MAAMvD,UAAUgC,OAAO,aAI9B,IAAiC3B,EACzBG,C","sources":["src/library.js","src/js/sortLibrary.js"],"sourcesContent":["import './js/libraryButtonSwitch';\nimport './js/modal';\nimport './js/modalTeamForm';\nimport './js/scrollTo';\nimport './js/sortLibrary';\nimport './js/popup';\nimport './js/firebase';\nimport './js/theme';\nimport './js/fixFooter';\n","import getRefs from './getRefs';\nimport {removeMarkupMovieCard} from './movie-card';\nimport { getGenresLocalStorege } from './api-genres';\n\nconst refs = getRefs();\n\nrefs.btn.addEventListener('click', onClickMenu)\nfunction onClickMenu() {\n  refs.firstLine.classList.toggle('genres-nav-button__line--1');\n  refs.secondLine.classList.toggle('genres-nav-button__line--2');\n  refs.thirdLine.classList.toggle('genres-nav-button__line--3');\n  refs.menu.classList.toggle('mobile-menu--open');\n  renderGenres(getFromStorageGenre())\n}\nwindow.onscroll = function () {\n  scrollFunction();\n};\nfunction scrollFunction() {\n  if (document.body.scrollTop > 200 || document.documentElement.scrollTop > 200) {\n        refs.menu.classList.remove('mobile-menu--open');\n        refs.firstLine.classList.remove('genres-nav-button__line--1');\n        refs.secondLine.classList.remove('genres-nav-button__line--2');\n        refs.thirdLine.classList.remove('genres-nav-button__line--3');\n    }\n}\n\nfunction renderGenres(results) {\n  refs.menuList.innerHTML = '';\n  const markup = results.map(({name,id}) =>{\n      return `<li class=\"mobile-menu-item\"><a class='mobile-menu-link' data-action=\"${id}\">${name}</a></li>`\n  }).join('');\n  refs.menuList.insertAdjacentHTML('beforeend', markup)\n}\n\nlet storageKey = 'genres';\nfunction getFromStorageGenre() {\n  try {\n    const data = JSON.parse(localStorage.getItem(storageKey));\n    return data;\n} catch (err) {\n    console.warn('Cannot parse JSON from localStorage');\n    return null;\n}\n}\n\n//sort\nrefs.menuList.addEventListener('click', sortByGenre)\n\nfunction sortByGenre(event) {\n    if (event.target.nodeName !== \"A\") {\n      return;\n    }\n\n    let storageKey = 'watched';\n      function getFromStorageMovies() {\n    try {\n      const data = JSON.parse(localStorage.getItem(storageKey));\n      return data;\n    } catch (err) {\n      console.warn('Cannot parse JSON from localStorage');\n      return null;\n    }\n  }\n  const result = getFromStorageMovies();\n\n  const value = event.target.dataset.action;\n  const link = document.querySelectorAll('.mobile-menu-link');\n  console.log('sortByGenre ~ value', value);\n  for (let i = 0; i < link.length; i += 1) {\n    if (value === link[i].dataset.action) {\n      link[i].classList.add('active');\n    } else {\n      link[i].classList.remove('active');\n    }\n  }\n\n  let arr =[];\n  \n  result.forEach((elem)=>{\n    if(elem.genre_ids.includes(Number(value))) {\n         removeMarkupMovieCard()\n         refs.title.classList.add('is-hidden')\n         arr.push(elem);\n    }\n    else {\n      removeMarkupMovieCard();\n    }\n  })\n  renderMarkupCardLibrary(arr);\n  if(arr.length===0) {\n    refs.title.classList.remove('is-hidden')\n  }\n\n\n  function renderMarkupCardLibrary(results) {\n    const markup = results\n      .map(({ id, poster_path, genre_ids, title, release_date }) => {\n        let name = getGenresLocalStorege(genre_ids);\n        return `\n                  <li class=\"gallery__item\" data-id=\"${id}\">\n                          ${\n                            poster_path\n                              ? `<img src=\"https://image.tmdb.org/t/p/w500${poster_path}\"`\n                              : `<img src=\"https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj\"`\n                          }\n                          class=\"gallery__item-image\" \n                          alt=\"${title}\" width=\"250\"\n                          loading=\"lazy\"\n                          />\n                          <div class=\"gallery__item-description\">\n                          <p class=\"gallery__item-description-title\"> ${title}</p>\n                          <p class=\"gallery__item-description-genres\"> ${name} | ${release_date?.slice(\n          0,\n          4\n        )}</p>\n                      </div>\n                  </li> `;\n      })\n      .join('');\n    refs.galleryList.insertAdjacentHTML('beforeend', markup);\n  }\n}"],"names":["parcelRequire","$l1RgP","$5e1674c5b10bb598$var$refs","default","btn","addEventListener","firstLine","classList","toggle","secondLine","thirdLine","menu","results","menuList","innerHTML","markup","map","param","name","id","concat","join","insertAdjacentHTML","$5e1674c5b10bb598$var$renderGenres","JSON","parse","localStorage","getItem","$5e1674c5b10bb598$var$storageKey","err","console","warn","$5e1674c5b10bb598$var$getFromStorageGenre","window","onscroll","document","body","scrollTop","documentElement","remove","event","target","nodeName","result","getFromStorageMovies","value","dataset","action","link","querySelectorAll","log","i","length","add","arr","forEach","elem","genre_ids","includes","Number","$94krt","removeMarkupMovieCard","title","push","poster_path","release_date","$2rpNs","getGenresLocalStorege","slice","galleryList"],"version":3,"file":"library.69613c72.js.map"}