{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,0BAIMC,GAAO,G,cAAAC,WAKb,SAASC,KACP,EAAAJ,EAAAK,0BACA,EAAAC,EAAAC,qBACAL,EAAKM,WAAWC,UAAUC,IAAI,gBAC9BR,EAAKS,SAASF,UAAUG,OAAO,gBAC/B,IAAIC,GAAU,EAAAC,EAAAC,gBAAe,YAC7B,EAAAf,EAAAgB,uBAAsB,CAAEH,W,CAT1BX,EAAKM,WAAWS,iBAAiB,QAASb,GAC1CF,EAAKS,SAASM,iBAAiB,SAW/B,YACE,EAAAjB,EAAAK,0BACA,EAAAC,EAAAC,qBACAL,EAAKS,SAASF,UAAUC,IAAI,gBAC5BR,EAAKM,WAAWC,UAAUG,OAAO,gBACjC,IAAIC,GAAU,EAAAC,EAAAC,gBAAe,UAC7B,EAAAf,EAAAgB,uBAAsB,CAAEH,W,IAG1BT,I,iCC3BA,IAAAc,EAAAjB,EAAA,S,4BAKMkB,GAAO,EAAAD,EAAAf,WAEbgB,EAAKC,IAAIH,iBAAiB,SAC1B,WACEE,EAAKE,UAAUZ,UAAUa,OAAO,8BAChCH,EAAKI,WAAWd,UAAUa,OAAO,8BACjCH,EAAKK,UAAUf,UAAUa,OAAO,8BAChCH,EAAKM,KAAKhB,UAAUa,OAAO,qBAI7B,SAAsBT,GACpBM,EAAKO,SAASC,UAAY,GAC1B,IAAMC,EAASf,EAAQgB,KAAI,SAAAC,G,IAAEC,EAAID,EAAJC,KAAKC,EAAEF,EAAFE,GAC9B,MAAO,2EAAgFC,OAAPD,EAAG,MAASC,OAALF,EAAK,Y,IAC7FG,KAAK,IACRf,EAAKO,SAASS,mBAAmB,YAAaP,E,CAR9CQ,CAYF,WACE,IAEE,OADaC,KAAKC,MAAMC,aAAaC,QAAQC,G,CAE/C,MAAOC,GAEL,OADAC,QAAQC,KAAK,uCACN,I,EAlBIC,G,IAWf,IAAIJ,EAAa,SAWjBtB,EAAKO,SAAST,iBAAiB,SAE/B,SAAqB6B,GACjB,GAA8B,MAA1BA,EAAMC,OAAOC,SACf,OAYJ,IAAMC,EATF,WACF,IAEE,OADaZ,KAAKC,MAAMC,aAAaC,QAHtB,U,CAKf,MAAOE,GAEP,OADAC,QAAQC,KAAK,uCACN,I,EAGIM,GAETC,EAAQL,EAAMC,OAAOK,QAAQC,OACnCV,QAAQW,IAAIH,GACZ,IAAMI,EAAsBN,EAAOpC,QACnC8B,QAAQW,IAAI,IAAIC,GAId,IAAIC,EAAK,GAEXD,EAAoBE,SAAQ,SAACC,GAa7B,IACQ9B,EAbH8B,EAAKC,UAAUC,SAASC,OAAOV,OAC7B,EAAAnD,EAAAK,yBACAmD,EAAIM,KAAKJ,GAWR9B,EAVoB4B,EAWvB3B,KAAI,SAAAC,G,IAAGE,EAAEF,EAAFE,GAAI+B,EAAWjC,EAAXiC,YAAaJ,EAAS7B,EAAT6B,UAAWK,EAAKlC,EAALkC,MAAOC,EAAYnC,EAAZmC,aACrClC,GAAO,EAAAmC,EAAAC,uBAAsBR,GACjC,MAAO,0DAGa1B,OAF2BD,EAAG,kCAOzBC,OALL8B,EACI,4CAAwD9B,OAAZ8B,EAAY,KACvD,uIACN,6FAM6C9B,OAJvC+B,EAAM,oOAKkC/B,OADD+B,EAAM,iFACA/B,OAALF,EAAK,OAGpEE,OAHyEgC,aAAA,EAAAA,EAAcG,MACvF,EACA,GACA,+D,IAIHlC,KAAK,IACRf,EAAKkD,YAAYlC,mBAAmB,YAAaP,GAhC7Ce,QAAQW,IAAII,G","sources":["src/js/libraryButtonSwitch.js","src/js/sortLibrary.js"],"sourcesContent":["import { renderMarkupMovieCard, removeMarkupMovieCard } from './movie-card';\nimport { clearData, getFromStorage, saveToStorage } from './localeCommon';\nimport { getCurrentStorage } from './localeStorage';\nimport getRefs from './getRefs';\nconst refs = getRefs();\n\nrefs.btnWatched.addEventListener('click', clickOnWatched);\nrefs.btnQueue.addEventListener('click', clickOnQueue);\n\nfunction clickOnWatched() {\n  removeMarkupMovieCard();\n  getCurrentStorage();\n  refs.btnWatched.classList.add('--active-btn');\n  refs.btnQueue.classList.remove('--active-btn');\n  let results = getFromStorage('watched');\n  renderMarkupMovieCard({ results });\n}\n\nfunction clickOnQueue() {\n  removeMarkupMovieCard();\n  getCurrentStorage();\n  refs.btnQueue.classList.add('--active-btn');\n  refs.btnWatched.classList.remove('--active-btn');\n  let results = getFromStorage('queue');\n  renderMarkupMovieCard({ results });\n}\n\nclickOnWatched();\n","import getRefs from './getRefs';\nimport { renderMarkupMovieCard, removeMarkupMovieCard } from './movie-card';\nimport { getGenresLocalStorege } from './api-genres';\n//import {clearData, getFromStorage, saveToStorage, removeItem} from './localeCommon';\n\nconst refs = getRefs();\n\nrefs.btn.addEventListener('click', onClickMenu)\nfunction onClickMenu() {\n  refs.firstLine.classList.toggle('genres-nav-button__line--1');\n  refs.secondLine.classList.toggle('genres-nav-button__line--2');\n  refs.thirdLine.classList.toggle('genres-nav-button__line--3');\n  refs.menu.classList.toggle('mobile-menu--open');\n  renderGenres(getFromStorageGenre())\n}\n\nfunction renderGenres(results) {\n  refs.menuList.innerHTML = '';\n  const markup = results.map(({name,id}) =>{\n      return `<li class=\"mobile-menu-item\"><a class='mobile-menu-link' data-action=\"${id}\">${name}</a></li>`\n  }).join('');\n  refs.menuList.insertAdjacentHTML('beforeend', markup)\n}\n\nlet storageKey = 'genres';\nfunction getFromStorageGenre() {\n  try {\n    const data = JSON.parse(localStorage.getItem(storageKey));\n    return data;\n} catch (err) {\n    console.warn('Cannot parse JSON from localStorage');\n    return null;\n}\n}\n\nrefs.menuList.addEventListener('click', sortByGenre)\n\nfunction sortByGenre(event) {\n    if (event.target.nodeName !== \"A\") {\n      return;\n    }\n    let storageKey = 'movies';\n      function getFromStorageMovies() {\n    try {\n      const data = JSON.parse(localStorage.getItem(storageKey));\n      return data;\n    } catch (err) {\n      console.warn('Cannot parse JSON from localStorage');\n      return null;\n    }\n  }\n  const result = getFromStorageMovies();\n//\n  const value = event.target.dataset.action;\n  console.log(value)\n  const elementsFilterGenre = result.results;\n  console.log('1',elementsFilterGenre)\n\n//\n\n    let arr =[];\n\n  elementsFilterGenre.forEach((elem)=>{\n    if(elem.genre_ids.includes(Number(value))) {\n         removeMarkupMovieCard()\n         arr.push(elem);\n        renderMarkupMovieCard(arr)\n\n        console.log(elem)\n\n    }\n  })\n\n\n\n  function renderMarkupMovieCard(results) {\n    const markup = results\n      .map(({ id, poster_path, genre_ids, title, release_date }) => {\n        let name = getGenresLocalStorege(genre_ids);\n        return `\n                  <li class=\"gallery__item\" data-id=\"${id}\">\n                          ${\n                            poster_path\n                              ? `<img src=\"https://image.tmdb.org/t/p/w500${poster_path}\"`\n                              : `<img src=\"https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj\"`\n                          }\n                          class=\"gallery__item-image\" \n                          alt=\"${title}\" width=\"250\"\n                          loading=\"lazy\"\n                          />\n                          <div class=\"gallery__item-description\">\n                          <p class=\"gallery__item-description-title\"> ${title}</p>\n                          <p class=\"gallery__item-description-genres\"> ${name} | ${release_date?.slice(\n          0,\n          4\n        )}</p>\n                      </div>\n                  </li> `;\n      })\n      .join('');\n    refs.galleryList.insertAdjacentHTML('beforeend', markup);\n  }\n}"],"names":["$94krt","parcelRequire","$e1ba1ea53169ee62$var$refs","default","$e1ba1ea53169ee62$var$clickOnWatched","removeMarkupMovieCard","$7lLYX","getCurrentStorage","btnWatched","classList","add","btnQueue","remove","results","$iMXa0","getFromStorage","renderMarkupMovieCard","addEventListener","$l1RgP","$5e1674c5b10bb598$var$refs","btn","firstLine","toggle","secondLine","thirdLine","menu","menuList","innerHTML","markup","map","param","name","id","concat","join","insertAdjacentHTML","$5e1674c5b10bb598$var$renderGenres","JSON","parse","localStorage","getItem","$5e1674c5b10bb598$var$storageKey","err","console","warn","$5e1674c5b10bb598$var$getFromStorageGenre","event","target","nodeName","result","getFromStorageMovies","value","dataset","action","log","elementsFilterGenre","arr","forEach","elem","genre_ids","includes","Number","push","poster_path","title","release_date","$2rpNs","getGenresLocalStorege","slice","galleryList"],"version":3,"file":"library.77c55fc3.js.map"}